name: Build and Run tests

on: 
  push:
    branches: [ main ]

  pull_request:
    branches: [ main ]


env:
  TARGET: easy_opencv-tests

jobs:
#-----------------------------------------------------------------------------------------------
  Windows_MSVC_Debug:
    name: Windows MSVC Debug
    runs-on: windows-2022
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: Configure CMake
      run: cmake .\tests -B ${{github.workspace}}\build -DWARNINGS_AS_ERRORS_FOR_EASY_OPENCV=ON -D CMAKE_C_COMPILER=cl -D CMAKE_CXX_COMPILER=cl 

    - name: Build
      run: cmake --build ${{github.workspace}}\build --config Debug --target ${{env.TARGET}}

    - name: Curl opencv_world470d
      run: curl -L -o ${{github.workspace}}\build\Debug\opencv_world470d.dll https://github.com/CoolLibs/easy_opencv/raw/main/opencv/Windows/vc16/bin/opencv_world470d.dll

    - name: Curl opencv_videoio_ffmpeg470_64
      run: curl -L -o ${{github.workspace}}\build\Debug\opencv_videoio_ffmpeg470_64.dll https://github.com/CoolLibs/easy_opencv/raw/main/opencv/Windows/vc16/bin/opencv_videoio_ffmpeg470_64.dll
    
    - name: Curl opencv_videoio_msmf470_64d
      run: curl -L -o ${{github.workspace}}\build\Debug\opencv_videoio_msmf470_64d.dll https://github.com/CoolLibs/easy_opencv/raw/main/opencv/Windows/vc16/bin/opencv_videoio_msmf470_64d.dll

    - name: Show folder
      run: ls ${{github.workspace}}\build\Debug
  
    - name: Run
      run: ${{github.workspace}}\build\Debug\${{env.TARGET}} -CI

#-----------------------------------------------------------------------------------------------
  Windows_MSVC_Release:
    name: Windows MSVC Release
    runs-on: windows-2022
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: Configure CMake
      run: cmake .\tests -B ${{github.workspace}}\build -DWARNINGS_AS_ERRORS_FOR_EASY_OPENCV=ON -D CMAKE_C_COMPILER=cl -D CMAKE_CXX_COMPILER=cl

    - name: Build
      run: cmake --build ${{github.workspace}}\build --config Release --target ${{env.TARGET}}

    - name: Curl opencv_world470
      run: curl -L -o ${{github.workspace}}\build\Release\opencv_world470.dll https://github.com/CoolLibs/easy_opencv/raw/main/opencv/Windows/vc16/bin/opencv_world470.dll

    - name: Curl opencv_videoio_ffmpeg470_64
      run: curl -L -o ${{github.workspace}}\build\Release\opencv_videoio_ffmpeg470_64.dll https://github.com/CoolLibs/easy_opencv/raw/main/opencv/Windows/vc16/bin/opencv_videoio_ffmpeg470_64.dll
    
    - name: Curl opencv_videoio_msmf470_64
      run: curl -L -o ${{github.workspace}}\build\Release\opencv_videoio_msmf470_64.dll https://github.com/CoolLibs/easy_opencv/raw/main/opencv/Windows/vc16/bin/opencv_videoio_msmf470_64.dll

    - name: Show folder
      run: ls ${{github.workspace}}\build\Release

    - name: Run
      run: ${{github.workspace}}\build\Release\${{env.TARGET}} -CI

#-----------------------------------------------------------------------------------------------
  Windows_Clang_Debug:
    name: Windows Clang Debug
    runs-on: windows-2022
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: Configure CMake
      run: cmake .\tests -B ${{github.workspace}}\build -DWARNINGS_AS_ERRORS_FOR_EASY_OPENCV=ON -T ClangCL

    - name: Build
      run: cmake --build ${{github.workspace}}\build --config Debug --target ${{env.TARGET}}

    - name: Curl opencv_world470d
      run: curl -L -o ${{github.workspace}}\build\Debug\opencv_world470d.dll https://github.com/CoolLibs/easy_opencv/raw/main/opencv/Windows/vc16/bin/opencv_world470d.dll

    - name: Curl opencv_videoio_ffmpeg470_64
      run: curl -L -o ${{github.workspace}}\build\Debug\opencv_videoio_ffmpeg470_64.dll https://github.com/CoolLibs/easy_opencv/raw/main/opencv/Windows/vc16/bin/opencv_videoio_ffmpeg470_64.dll
    
    - name: Curl opencv_videoio_msmf470_64d
      run: curl -L -o ${{github.workspace}}\build\Debug\opencv_videoio_msmf470_64d.dll https://github.com/CoolLibs/easy_opencv/raw/main/opencv/Windows/vc16/bin/opencv_videoio_msmf470_64d.dll

    - name: Show folder
      run: ls ${{github.workspace}}\build\Debug

    - name: Run
      run: ${{github.workspace}}\build\Debug\${{env.TARGET}} -CI

#-----------------------------------------------------------------------------------------------
  Windows_Clang_Release:
    name: Windows Clang Release
    runs-on: windows-2022
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: Configure CMake
      run: cmake .\tests -B ${{github.workspace}}\build -DWARNINGS_AS_ERRORS_FOR_EASY_OPENCV=ON -T ClangCL

    - name: Build
      run: cmake --build ${{github.workspace}}\build --config Release --target ${{env.TARGET}}


    - name: Curl opencv_world470
      run: curl -L -o ${{github.workspace}}\build\Release\opencv_world470.dll https://github.com/CoolLibs/easy_opencv/raw/main/opencv/Windows/vc16/bin/opencv_world470.dll

    - name: Curl opencv_videoio_ffmpeg470_64
      run: curl -L -o ${{github.workspace}}\build\Release\opencv_videoio_ffmpeg470_64.dll https://github.com/CoolLibs/easy_opencv/raw/main/opencv/Windows/vc16/bin/opencv_videoio_ffmpeg470_64.dll
    
    - name: Curl opencv_videoio_msmf470_64
      run: curl -L -o ${{github.workspace}}\build\Release\opencv_videoio_msmf470_64.dll https://github.com/CoolLibs/easy_opencv/raw/main/opencv/Windows/vc16/bin/opencv_videoio_msmf470_64.dll

    - name: Show folder
      run: ls ${{github.workspace}}\build\Release


    - name: Run
      run: ${{github.workspace}}\build\Release\${{env.TARGET}} -CI

#-----------------------------------------------------------------------------------------------
  Linux_GCC_Debug:
    name: Linux GCC Debug
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive
    
    
    - name: Configure CMake
      run: cmake ./tests -B ${{github.workspace}}/build -DWARNINGS_AS_ERRORS_FOR_EASY_OPENCV=ON -D CMAKE_BUILD_TYPE=Debug -D CMAKE_C_COMPILER=gcc-11 -D CMAKE_CXX_COMPILER=g++-11

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config Debug --target ${{env.TARGET}}

    - name: Run
      run: ${{github.workspace}}/build/${{env.TARGET}} -CI
    
#-----------------------------------------------------------------------------------------------
  Linux_GCC_Release:
    name: Linux GCC Release
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive
    
    
    - name: Configure CMake
      run: cmake ./tests -B ${{github.workspace}}/build -DWARNINGS_AS_ERRORS_FOR_EASY_OPENCV=ON -D CMAKE_BUILD_TYPE=Release -D CMAKE_C_COMPILER=gcc-11 -D CMAKE_CXX_COMPILER=g++-11

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config Release --target ${{env.TARGET}}

    - name: Run
      run: ${{github.workspace}}/build/${{env.TARGET}} -CI

#-----------------------------------------------------------------------------------------------
  Linux_Clang_Debug:
    name: Linux Clang Debug 
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive
    
    
    - name: Configure CMake
      run: cmake ./tests -B ${{github.workspace}}/build -DWARNINGS_AS_ERRORS_FOR_EASY_OPENCV=ON -D CMAKE_BUILD_TYPE=Debug -D CMAKE_C_COMPILER=clang -D CMAKE_CXX_COMPILER=clang++

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config Debug --target ${{env.TARGET}}

    - name: Run
      run: ${{github.workspace}}/build/${{env.TARGET}} -CI

#-----------------------------------------------------------------------------------------------
  Linux_Clang_Release:
    name: Linux Clang Release
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive
    
    
    - name: Configure CMake
      run: cmake ./tests -B ${{github.workspace}}/build -DWARNINGS_AS_ERRORS_FOR_EASY_OPENCV=ON -D CMAKE_BUILD_TYPE=Release -D CMAKE_C_COMPILER=clang -D CMAKE_CXX_COMPILER=clang++

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config Release --target ${{env.TARGET}}

    - name: Run
      run: ${{github.workspace}}/build/${{env.TARGET}} -CI

#-----------------------------------------------------------------------------------------------
  MacOS_GCC_Debug: 
    name: MacOS GCC Debug
    runs-on: macos-11
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: Configure CMake
      run: cmake ./tests -B ${{github.workspace}}/build -DWARNINGS_AS_ERRORS_FOR_EASY_OPENCV=ON -D CMAKE_BUILD_TYPE=Debug -D CMAKE_C_COMPILER=gcc-11 -D CMAKE_CXX_COMPILER=g++-11

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config Debug --target ${{env.TARGET}}

    - name: Run
      run: ${{github.workspace}}/build/${{env.TARGET}} -CI
    
#-----------------------------------------------------------------------------------------------
  MacOS_GCC_Release: 
    name: MacOS GCC Release
    runs-on: macos-11
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: Configure CMake
      run: cmake ./tests -B ${{github.workspace}}/build -DWARNINGS_AS_ERRORS_FOR_EASY_OPENCV=ON -D CMAKE_BUILD_TYPE=Release -D CMAKE_C_COMPILER=gcc-11 -D CMAKE_CXX_COMPILER=g++-11

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config Release --target ${{env.TARGET}}

    - name: Run
      run: ${{github.workspace}}/build/${{env.TARGET}} -CI

#-----------------------------------------------------------------------------------------------
  MacOS_Clang_Debug:
    name: MacOS Clang Debug 
    runs-on: macos-11
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: Configure CMake
      run: cmake ./tests -B ${{github.workspace}}/build -DWARNINGS_AS_ERRORS_FOR_EASY_OPENCV=ON -D CMAKE_BUILD_TYPE=Debug -D CMAKE_C_COMPILER=$(brew --prefix llvm)/bin/clang -D CMAKE_CXX_COMPILER=$(brew --prefix llvm)/bin/clang++

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config Debug --target ${{env.TARGET}}

    - name: Run
      run: ${{github.workspace}}/build/${{env.TARGET}} -CI

#-----------------------------------------------------------------------------------------------
  MacOS_Clang_Release: 
    name: MacOS Clang Release
    runs-on: macos-11
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: Configure CMake
      run: cmake ./tests -B ${{github.workspace}}/build -DWARNINGS_AS_ERRORS_FOR_EASY_OPENCV=ON -D CMAKE_BUILD_TYPE=Release -D CMAKE_C_COMPILER=$(brew --prefix llvm)/bin/clang -D CMAKE_CXX_COMPILER=$(brew --prefix llvm)/bin/clang++

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config Release --target ${{env.TARGET}}

    - name: Run
      run: ${{github.workspace}}/build/${{env.TARGET}} -CI               
