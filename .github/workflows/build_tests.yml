name: Build tests

on: 
  push:
    branches: [ main ]

  pull_request:
    branches: [ main ]


env:
  TARGET: easy_opencv-tests

jobs:
#-----------------------------------------------------------------------------------------------
  Linux_Clang_Release:
    name: Linux Clang Release
    runs-on: ubuntu-22.04
   
    env: 
      CACHE_KEY: linux-clang-release

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: Install GTK
      run : sudo apt-get install libgtk-3-dev

    # - name: Determine OS and set custom environment variable
    #   run : echo "OS=${{ runner.os }}" >> $GITHUB_ENV

    - name: Cache OpenCV Build
      uses: actions/cache@v2
      with:
        path: |
          /tests/build/easy_opencv
        key: ${{ env.CACHE_KEY }}

    - name: Configure CMake
      run: cmake ./tests -B ${{github.workspace}}/build -DWARNINGS_AS_ERRORS_FOR_EASY_OPENCV=ON -D CMAKE_BUILD_TYPE=Release -D CMAKE_C_COMPILER=clang -D CMAKE_CXX_COMPILER=clang++

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config Release --target ${{env.TARGET}}

#-----------------------------------------------------------------------------------------------
#   MacOS_Clang_Debug:
#     name: MacOS Clang Debug 
#     runs-on: macos-11
#     steps:
#     - uses: actions/checkout@v3
#       with:
#         submodules: recursive

#     - name: Configure CMake
#       run: cmake ./tests -B ${{github.workspace}}/build -DWARNINGS_AS_ERRORS_FOR_EASY_OPENCV=ON -D CMAKE_BUILD_TYPE=Debug -D CMAKE_C_COMPILER=$(brew --prefix llvm@15)/bin/clang -D CMAKE_CXX_COMPILER=$(brew --prefix llvm@15)/bin/clang++

#     - name: Build
#       run: cmake --build ${{github.workspace}}/build --config Debug --target ${{env.TARGET}}

# #-----------------------------------------------------------------------------------------------
#   MacOS_Clang_Release: 
#     name: MacOS Clang Release
#     runs-on: macos-11
#     steps:
#     - uses: actions/checkout@v3
#       with:
#         submodules: recursive

#     - name: Configure CMake
#       run: cmake ./tests -B ${{github.workspace}}/build -DWARNINGS_AS_ERRORS_FOR_EASY_OPENCV=ON -D CMAKE_BUILD_TYPE=Release -D CMAKE_C_COMPILER=$(brew --prefix llvm@15)/bin/clang -D CMAKE_CXX_COMPILER=$(brew --prefix llvm@15)/bin/clang++

#     - name: Build
#       run: cmake --build ${{github.workspace}}/build --config Release --target ${{env.TARGET}}